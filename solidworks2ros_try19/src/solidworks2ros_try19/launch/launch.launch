<launch>

    <!-- Load and spawn the robot -->
    <param name="robot_description" command="$(find xacro)/xacro $(find solidworks2ros_try19)/urdf/solidworks2ros_try19.urdf"/>
    <node name="spawn_robot" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model solidworks2ros_try19 " />

    <!-- Load and spawn the cube -->
    <param name="cube" command="$(find xacro)/xacro $(find solidworks2ros_try19)/urdf/cube_pick_place.urdf" />
    <node name="spawn_cube" pkg="gazebo_ros" type="spawn_model" args="-param cube -urdf -model cube_pick_place -x -1.0 -y 1.0 -z 0.0" />
    
    
    <!-- Launch Gazebo empty world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch" />

    <!-- Load the controller -->
    <rosparam file="$(find solidworks2ros_try19)/config/position_controller_short.yaml" />
    
    <node name="Controller_Spawner" pkg="controller_manager" type="spawner" args="  joint_state_controller 
                                                                                    joint_Xaxis_position_controller
                                                                                    joint_Yaxis_position_controller
                                                                                    joint_trolley_position_controller
                                                                                    joint_ropeGroup_position_controller
                                                                                    joint_Zaxis_position_controller
                                                                                    joint_gripper_right_position_controller
                                                                                    joint_gripper_left_position_controller" />
    
    <!-- Add the controller_manager node -->
    <node name="controller_manager" pkg="controller_manager" type="controller_manager" respawn="false" output="screen"/>

    <!-- Load important nodes-->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" output="screen" />
    <node name="Robot_State_Publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen"/>
    <node name="rqt_reconfigure" pkg="rqt_gui" type="rqt_gui" output="screen" />
        
</launch>
